{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gunad\\\\OneDrive\\\\Documents\\\\Book_Recommendation\\\\Book_Recommendation\\\\Book_Recommendation\\\\frontend\\\\src\\\\components\\\\BookDetails\\\\BookDetails.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './BookDetails.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookDetails = () => {\n  _s();\n  var _book$volumeInfo4, _book$volumeInfo5, _book$volumeInfo5$aut, _book$volumeInfo6, _book$volumeInfo6$ima, _book$volumeInfo7, _book$volumeInfo8, _book$volumeInfo9, _book$volumeInfo10, _book$volumeInfo10$ca, _book$volumeInfo11;\n  const {\n    id\n  } = useParams(); // Get the book ID from the URL\n  const [book, setBook] = React.useState(null);\n  const [error, setError] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [isReading, setIsReading] = React.useState(false); // State to track if the book is being read aloud\n  const [utterance, setUtterance] = React.useState(null); // Store the utterance for controlling speech\n  const [language, setLanguage] = React.useState('en'); // Default language (English)\n  const [translatedDescription, setTranslatedDescription] = React.useState(null); // Store translated text\n  const [translationError, setTranslationError] = React.useState(null); // Error state for translation\n  const [voices, setVoices] = React.useState([]); // State to store available voices\n  const [selectedVoice, setSelectedVoice] = React.useState(null); // State to track the selected voice\n\n  // Construct the URL for fetching book details\n  const SEARCH_URL = `https://www.googleapis.com/books/v1/volumes/${id}`;\n  React.useEffect(() => {\n    // Fetch book details using the ID\n    axios.get(SEARCH_URL).then(response => {\n      setBook(response.data);\n      setIsLoading(false);\n    }).catch(err => {\n      setError(err);\n      setIsLoading(false);\n    });\n\n    // Load voices available in the system\n    const loadVoices = () => {\n      const availableVoices = speechSynthesis.getVoices();\n      setVoices(availableVoices);\n      setSelectedVoice(availableVoices[0]); // Default to the first available voice\n    };\n\n    // Check voices when they are loaded\n    if (speechSynthesis.onvoiceschanged !== undefined) {\n      speechSynthesis.onvoiceschanged = loadVoices;\n    } else {\n      loadVoices(); // For browsers that don't fire the 'voiceschanged' event\n    }\n  }, [SEARCH_URL]);\n\n  // Function to handle translation using LibreTranslate\n  const handleTranslate = async lang => {\n    var _book$volumeInfo;\n    if (book && (_book$volumeInfo = book.volumeInfo) !== null && _book$volumeInfo !== void 0 && _book$volumeInfo.description) {\n      const textToTranslate = book.volumeInfo.description;\n      console.log('Translating:', textToTranslate); // Debugging: Log the text being translated\n      try {\n        // Call the LibreTranslate API\n        const response = await axios.post('https://libretranslate.de/translate', {\n          q: textToTranslate,\n          source: 'en',\n          // Default source language (English)\n          target: lang,\n          // Selected target language (e.g., 'hi' for Hindi, 'ta' for Tamil)\n          format: 'text'\n        });\n        setTranslatedDescription(response.data.translatedText);\n        setTranslationError(null); // Clear any previous translation errors\n      } catch (err) {\n        console.error('Error translating text:', err);\n        setTranslationError('Translation failed. Please try again later.');\n      }\n    } else {\n      setTranslationError('No description available for translation.');\n    }\n  };\n\n  // Function to handle \"Read Aloud\"\n  const handleReadAloud = () => {\n    var _book$volumeInfo2;\n    const text = translatedDescription || ((_book$volumeInfo2 = book.volumeInfo) === null || _book$volumeInfo2 === void 0 ? void 0 : _book$volumeInfo2.description);\n    if (text && selectedVoice) {\n      const newUtterance = new SpeechSynthesisUtterance(text);\n      newUtterance.voice = selectedVoice;\n      newUtterance.onend = () => {\n        setIsReading(false); // Reset the state when the speech ends\n      };\n      speechSynthesis.speak(newUtterance);\n      setUtterance(newUtterance);\n      setIsReading(true);\n    }\n  };\n\n  // Function to pause reading\n  const handlePauseReading = () => {\n    if (utterance) {\n      speechSynthesis.pause();\n    }\n  };\n\n  // Function to resume reading\n  const handleResumeReading = () => {\n    if (utterance) {\n      speechSynthesis.resume();\n    }\n  };\n\n  // Function to stop reading\n  const handleStopReading = () => {\n    if (utterance) {\n      speechSynthesis.cancel();\n      setIsReading(false);\n      setUtterance(null);\n    }\n  };\n\n  // Function to rewind (start over) reading\n  const handleRewindReading = () => {\n    var _book$volumeInfo3;\n    const text = translatedDescription || ((_book$volumeInfo3 = book.volumeInfo) === null || _book$volumeInfo3 === void 0 ? void 0 : _book$volumeInfo3.description);\n    if (text) {\n      const newUtterance = new SpeechSynthesisUtterance(text);\n      newUtterance.voice = selectedVoice;\n      speechSynthesis.cancel(); // Stop any current speech\n      speechSynthesis.speak(newUtterance); // Start from the beginning\n      setUtterance(newUtterance);\n      setIsReading(true);\n    }\n  };\n  const handleLanguageChange = event => {\n    const lang = event.target.value;\n    setLanguage(lang);\n    handleTranslate(lang); // Translate the description when the language is changed\n  };\n\n  // Handle voice change\n  const handleVoiceChange = event => {\n    const voice = voices.find(v => v.name === event.target.value);\n    setSelectedVoice(voice); // Set the selected voice\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading book details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error fetching book details: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"book-title\",\n        children: (_book$volumeInfo4 = book.volumeInfo) === null || _book$volumeInfo4 === void 0 ? void 0 : _book$volumeInfo4.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"book-authors\",\n        children: [\"by \", (_book$volumeInfo5 = book.volumeInfo) === null || _book$volumeInfo5 === void 0 ? void 0 : (_book$volumeInfo5$aut = _book$volumeInfo5.authors) === null || _book$volumeInfo5$aut === void 0 ? void 0 : _book$volumeInfo5$aut.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"book-cover\",\n        src: (_book$volumeInfo6 = book.volumeInfo) === null || _book$volumeInfo6 === void 0 ? void 0 : (_book$volumeInfo6$ima = _book$volumeInfo6.imageLinks) === null || _book$volumeInfo6$ima === void 0 ? void 0 : _book$volumeInfo6$ima.thumbnail,\n        alt: \"Book cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"book-description\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), \" \", translatedDescription || ((_book$volumeInfo7 = book.volumeInfo) === null || _book$volumeInfo7 === void 0 ? void 0 : _book$volumeInfo7.description) || \"No description available.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"book-published-date\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Published Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), \" \", ((_book$volumeInfo8 = book.volumeInfo) === null || _book$volumeInfo8 === void 0 ? void 0 : _book$volumeInfo8.publishedDate) || \"Not available.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"book-page-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Page Count:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), \" \", ((_book$volumeInfo9 = book.volumeInfo) === null || _book$volumeInfo9 === void 0 ? void 0 : _book$volumeInfo9.pageCount) || \"Not available.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"book-categories\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Categories:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), \" \", ((_book$volumeInfo10 = book.volumeInfo) === null || _book$volumeInfo10 === void 0 ? void 0 : (_book$volumeInfo10$ca = _book$volumeInfo10.categories) === null || _book$volumeInfo10$ca === void 0 ? void 0 : _book$volumeInfo10$ca.join(', ')) || \"Not available.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"purchase-link\",\n          href: (_book$volumeInfo11 = book.volumeInfo) === null || _book$volumeInfo11 === void 0 ? void 0 : _book$volumeInfo11.infoLink,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Purchase Book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"language\",\n            children: \"Select Language:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"language\",\n            value: language,\n            onChange: handleLanguageChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"en\",\n              children: \"English\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hi\",\n              children: \"Hindi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ta\",\n              children: \"Tamil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voice-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"voice\",\n            children: \"Select Voice:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"voice\",\n            value: (selectedVoice === null || selectedVoice === void 0 ? void 0 : selectedVoice.name) || '',\n            onChange: handleVoiceChange,\n            children: voices.map((voice, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: voice.name,\n              children: voice.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), translationError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: translationError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"read-aloud-container\",\n          children: isReading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlePauseReading,\n              children: \"Pause\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleResumeReading,\n              children: \"Resume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleRewindReading,\n              children: \"Rewind\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleStopReading,\n              children: \"Stop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReadAloud,\n            children: \"Read Aloud\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n_s(BookDetails, \"AH6mgUA8Ck+V6F4UtylYghQRQMY=\", false, function () {\n  return [useParams];\n});\n_c = BookDetails;\nexport default BookDetails;\nvar _c;\n$RefreshReg$(_c, \"BookDetails\");","map":{"version":3,"names":["React","useParams","axios","jsxDEV","_jsxDEV","BookDetails","_s","_book$volumeInfo4","_book$volumeInfo5","_book$volumeInfo5$aut","_book$volumeInfo6","_book$volumeInfo6$ima","_book$volumeInfo7","_book$volumeInfo8","_book$volumeInfo9","_book$volumeInfo10","_book$volumeInfo10$ca","_book$volumeInfo11","id","book","setBook","useState","error","setError","isLoading","setIsLoading","isReading","setIsReading","utterance","setUtterance","language","setLanguage","translatedDescription","setTranslatedDescription","translationError","setTranslationError","voices","setVoices","selectedVoice","setSelectedVoice","SEARCH_URL","useEffect","get","then","response","data","catch","err","loadVoices","availableVoices","speechSynthesis","getVoices","onvoiceschanged","undefined","handleTranslate","lang","_book$volumeInfo","volumeInfo","description","textToTranslate","console","log","post","q","source","target","format","translatedText","handleReadAloud","_book$volumeInfo2","text","newUtterance","SpeechSynthesisUtterance","voice","onend","speak","handlePauseReading","pause","handleResumeReading","resume","handleStopReading","cancel","handleRewindReading","_book$volumeInfo3","handleLanguageChange","event","value","handleVoiceChange","find","v","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","title","authors","join","src","imageLinks","thumbnail","alt","publishedDate","pageCount","categories","href","infoLink","rel","htmlFor","onChange","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gunad/OneDrive/Documents/Book_Recommendation/Book_Recommendation/Book_Recommendation/frontend/src/components/BookDetails/BookDetails.js"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './BookDetails.css';\r\n\r\nconst BookDetails = () => {\r\n    const { id } = useParams(); // Get the book ID from the URL\r\n    const [book, setBook] = React.useState(null);\r\n    const [error, setError] = React.useState(null);\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [isReading, setIsReading] = React.useState(false); // State to track if the book is being read aloud\r\n    const [utterance, setUtterance] = React.useState(null); // Store the utterance for controlling speech\r\n    const [language, setLanguage] = React.useState('en'); // Default language (English)\r\n    const [translatedDescription, setTranslatedDescription] = React.useState(null); // Store translated text\r\n    const [translationError, setTranslationError] = React.useState(null); // Error state for translation\r\n    const [voices, setVoices] = React.useState([]); // State to store available voices\r\n    const [selectedVoice, setSelectedVoice] = React.useState(null); // State to track the selected voice\r\n\r\n    // Construct the URL for fetching book details\r\n    const SEARCH_URL = `https://www.googleapis.com/books/v1/volumes/${id}`;\r\n\r\n    React.useEffect(() => {\r\n        // Fetch book details using the ID\r\n        axios.get(SEARCH_URL)\r\n            .then(response => {\r\n                setBook(response.data);\r\n                setIsLoading(false);\r\n            })\r\n            .catch(err => {\r\n                setError(err);\r\n                setIsLoading(false);\r\n            });\r\n\r\n        // Load voices available in the system\r\n        const loadVoices = () => {\r\n            const availableVoices = speechSynthesis.getVoices();\r\n            setVoices(availableVoices);\r\n            setSelectedVoice(availableVoices[0]); // Default to the first available voice\r\n        };\r\n\r\n        // Check voices when they are loaded\r\n        if (speechSynthesis.onvoiceschanged !== undefined) {\r\n            speechSynthesis.onvoiceschanged = loadVoices;\r\n        } else {\r\n            loadVoices(); // For browsers that don't fire the 'voiceschanged' event\r\n        }\r\n    }, [SEARCH_URL]);\r\n\r\n    // Function to handle translation using LibreTranslate\r\n    const handleTranslate = async (lang) => {\r\n        if (book && book.volumeInfo?.description) {\r\n            const textToTranslate = book.volumeInfo.description;\r\n            console.log('Translating:', textToTranslate);  // Debugging: Log the text being translated\r\n            try {\r\n                // Call the LibreTranslate API\r\n                const response = await axios.post('https://libretranslate.de/translate', {\r\n                    q: textToTranslate,\r\n                    source: 'en',  // Default source language (English)\r\n                    target: lang,  // Selected target language (e.g., 'hi' for Hindi, 'ta' for Tamil)\r\n                    format: 'text',\r\n                });\r\n\r\n                setTranslatedDescription(response.data.translatedText);\r\n                setTranslationError(null);  // Clear any previous translation errors\r\n            } catch (err) {\r\n                console.error('Error translating text:', err);\r\n                setTranslationError('Translation failed. Please try again later.');\r\n            }\r\n        } else {\r\n            setTranslationError('No description available for translation.');\r\n        }\r\n    };\r\n\r\n    // Function to handle \"Read Aloud\"\r\n    const handleReadAloud = () => {\r\n        const text = translatedDescription || book.volumeInfo?.description;\r\n        if (text && selectedVoice) {\r\n            const newUtterance = new SpeechSynthesisUtterance(text);\r\n            newUtterance.voice = selectedVoice;\r\n            newUtterance.onend = () => {\r\n                setIsReading(false); // Reset the state when the speech ends\r\n            };\r\n\r\n            speechSynthesis.speak(newUtterance);\r\n            setUtterance(newUtterance);\r\n            setIsReading(true);\r\n        }\r\n    };\r\n\r\n    // Function to pause reading\r\n    const handlePauseReading = () => {\r\n        if (utterance) {\r\n            speechSynthesis.pause();\r\n        }\r\n    };\r\n\r\n    // Function to resume reading\r\n    const handleResumeReading = () => {\r\n        if (utterance) {\r\n            speechSynthesis.resume();\r\n        }\r\n    };\r\n\r\n    // Function to stop reading\r\n    const handleStopReading = () => {\r\n        if (utterance) {\r\n            speechSynthesis.cancel();\r\n            setIsReading(false);\r\n            setUtterance(null);\r\n        }\r\n    };\r\n\r\n    // Function to rewind (start over) reading\r\n    const handleRewindReading = () => {\r\n        const text = translatedDescription || book.volumeInfo?.description;\r\n        if (text) {\r\n            const newUtterance = new SpeechSynthesisUtterance(text);\r\n            newUtterance.voice = selectedVoice;\r\n            speechSynthesis.cancel(); // Stop any current speech\r\n            speechSynthesis.speak(newUtterance); // Start from the beginning\r\n            setUtterance(newUtterance);\r\n            setIsReading(true);\r\n        }\r\n    };\r\n\r\n    const handleLanguageChange = (event) => {\r\n        const lang = event.target.value;\r\n        setLanguage(lang);\r\n        handleTranslate(lang); // Translate the description when the language is changed\r\n    };\r\n\r\n    // Handle voice change\r\n    const handleVoiceChange = (event) => {\r\n        const voice = voices.find(v => v.name === event.target.value);\r\n        setSelectedVoice(voice); // Set the selected voice\r\n    };\r\n\r\n    if (isLoading) {\r\n        return <div className=\"loading\">Loading book details...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"error\">Error fetching book details: {error.message}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"book-details-container\">\r\n            <div className=\"book-header\">\r\n                <h2 className=\"book-title\">{book.volumeInfo?.title}</h2>\r\n                <p className=\"book-authors\">by {book.volumeInfo?.authors?.join(', ')}</p>\r\n            </div>\r\n\r\n            <div className=\"book-info\">\r\n                <img \r\n                    className=\"book-cover\" \r\n                    src={book.volumeInfo?.imageLinks?.thumbnail} \r\n                    alt=\"Book cover\" \r\n                />\r\n\r\n                <div className=\"book-details\">\r\n                    <p className=\"book-description\">\r\n                        <strong>Description:</strong> {translatedDescription || book.volumeInfo?.description || \"No description available.\"}\r\n                    </p>\r\n                    <p className=\"book-published-date\">\r\n                        <strong>Published Date:</strong> {book.volumeInfo?.publishedDate || \"Not available.\"}\r\n                    </p>\r\n                    <p className=\"book-page-count\">\r\n                        <strong>Page Count:</strong> {book.volumeInfo?.pageCount || \"Not available.\"}\r\n                    </p>\r\n                    <p className=\"book-categories\">\r\n                        <strong>Categories:</strong> {book.volumeInfo?.categories?.join(', ') || \"Not available.\"}\r\n                    </p>\r\n\r\n                    <a \r\n                        className=\"purchase-link\" \r\n                        href={book.volumeInfo?.infoLink} \r\n                        target=\"_blank\" \r\n                        rel=\"noopener noreferrer\"\r\n                    >\r\n                        Purchase Book\r\n                    </a>\r\n\r\n                    {/* Language Selection Dropdown */}\r\n                    <div className=\"language-selector\">\r\n                        <label htmlFor=\"language\">Select Language:</label>\r\n                        <select\r\n                            id=\"language\"\r\n                            value={language}\r\n                            onChange={handleLanguageChange}\r\n                        >\r\n                            <option value=\"en\">English</option>\r\n                            <option value=\"hi\">Hindi</option>\r\n                            <option value=\"ta\">Tamil</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/* Voice Selection Dropdown */}\r\n                    <div className=\"voice-selector\">\r\n                        <label htmlFor=\"voice\">Select Voice:</label>\r\n                        <select\r\n                            id=\"voice\"\r\n                            value={selectedVoice?.name || ''}\r\n                            onChange={handleVoiceChange}\r\n                        >\r\n                            {voices.map((voice, index) => (\r\n                                <option key={index} value={voice.name}>{voice.name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/* Translation Error Message */}\r\n                    {translationError && (\r\n                        <div className=\"error-message\">{translationError}</div>\r\n                    )}\r\n\r\n                    {/* Read Aloud Buttons */}\r\n                    <div className=\"read-aloud-container\">\r\n                        {isReading ? (\r\n                            <div>\r\n                                <button onClick={handlePauseReading}>Pause</button>\r\n                                <button onClick={handleResumeReading}>Resume</button>\r\n                                <button onClick={handleRewindReading}>Rewind</button>\r\n                                <button onClick={handleStopReading}>Stop</button>\r\n                            </div>\r\n                        ) : (\r\n                            <button onClick={handleReadAloud}>Read Aloud</button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}